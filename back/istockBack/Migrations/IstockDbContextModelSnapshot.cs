// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using istockBack.Models;

#nullable disable

namespace istockBack.Migrations
{
    [DbContext(typeof(IstockDbContext))]
    partial class IstockDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("istockBack.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Categori__8A3D240C8DF57A7A");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("istockBack.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCompra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("PrecioTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Proveedor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("proveedor");

                    b.HasKey("IdCompra")
                        .HasName("PK__Compra__077D56142EEBE7DC");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("istockBack.Models.GastoFijo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GastoFijo");
                });

            modelBuilder.Entity("istockBack.Models.ItemCompra", b =>
                {
                    b.Property<int>("IdItemCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idItemCompra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItemCompra"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int?>("CompraIdCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int")
                        .HasColumnName("idCompra");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<decimal>("PrecioTotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precioTotal");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precioUnitario");

                    b.HasKey("IdItemCompra");

                    b.HasIndex("CompraIdCompra");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdProducto");

                    b.ToTable("ItemCompra");
                });

            modelBuilder.Entity("istockBack.Models.ItemVenta", b =>
                {
                    b.Property<int>("IdItemVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idItemVenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItemVenta"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<decimal>("Ganancia")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("ganancia");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    b.Property<string>("NumeroSerie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioTotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precioTotal");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precioUnitario");

                    b.Property<int?>("VentaIdVenta")
                        .HasColumnType("int");

                    b.HasKey("IdItemVenta");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdVenta");

                    b.HasIndex("VentaIdVenta");

                    b.ToTable("ItemVenta");
                });

            modelBuilder.Entity("istockBack.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("descripcion");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.Property<decimal>("PrecioCosto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precioCosto");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precioVenta");

                    b.Property<int>("StockActual")
                        .HasColumnType("int")
                        .HasColumnName("stockActual");

                    b.Property<int>("StockMinimo")
                        .HasColumnType("int")
                        .HasColumnName("stockMinimo");

                    b.HasKey("IdProducto")
                        .HasName("PK__Producto__07F4A13281069226");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("istockBack.Models.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<string>("Cliente")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("cliente");

                    b.Property<string>("EquipoPartePago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FormaPago")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("formaPago");

                    b.Property<decimal>("GananciaTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorDolar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdVenta")
                        .HasName("PK__Venta__077D56142EEBE7DC");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("istockBack.Models.ItemCompra", b =>
                {
                    b.HasOne("istockBack.Models.Compra", null)
                        .WithMany("Items")
                        .HasForeignKey("CompraIdCompra");

                    b.HasOne("istockBack.Models.Compra", "Compra")
                        .WithMany("ItemCompra")
                        .HasForeignKey("IdCompra")
                        .IsRequired();

                    b.HasOne("istockBack.Models.Producto", "Producto")
                        .WithMany("ItemCompra")
                        .HasForeignKey("IdProducto")
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("istockBack.Models.ItemVenta", b =>
                {
                    b.HasOne("istockBack.Models.Producto", "Producto")
                        .WithMany("ItemVenta")
                        .HasForeignKey("IdProducto")
                        .IsRequired();

                    b.HasOne("istockBack.Models.Venta", "Venta")
                        .WithMany("ItemVenta")
                        .HasForeignKey("IdVenta")
                        .IsRequired();

                    b.HasOne("istockBack.Models.Venta", null)
                        .WithMany("Items")
                        .HasForeignKey("VentaIdVenta");

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("istockBack.Models.Producto", b =>
                {
                    b.HasOne("istockBack.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .IsRequired()
                        .HasConstraintName("FK_Producto_Categoria");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("istockBack.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("istockBack.Models.Compra", b =>
                {
                    b.Navigation("ItemCompra");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("istockBack.Models.Producto", b =>
                {
                    b.Navigation("ItemCompra");

                    b.Navigation("ItemVenta");
                });

            modelBuilder.Entity("istockBack.Models.Venta", b =>
                {
                    b.Navigation("ItemVenta");

                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
